@using TogglTimeWeb.Client.Pages.Dashboard.ProgressBar
@page "/dashboard"

<header>
</header>


<div class="row p-2 align-items-center">
    <div class="col-2">Time Elapsed (Week)</div>
    <div class="col-1">@ElapsedTime</div>
    <div class="col-5"><ProgressBar ProgressWidth="@this.ElapsedTimeWidthPercent" /></div>
</div>

<div class="row p-2 align-items-center">
    <div class="col-2">Time Remaining (Week)</div>
    <div class="col-1">@RemainingTime</div>
    <div class="col-5"><ProgressBar ProgressWidth="RemainingTimeWidthPercent"/></div>
</div>
<div style="margin-top: 30px; height: 20px;">&nbsp;</div>
<div class="row">
<EditForm id="editFormId" Model="this">

    @if (Me != null)
    {
        @: Select Workspace
        <InputSelect form="editFormId" 
                     ValueExpression="() => WorkSpaceID"
                     Value="@WorkSpaceID"
                     ValueChanged="(int wsid) => OnWorkSpaceIDChanged(wsid)">

        <option value="0">All</option>

            @foreach (var val in Me.TogglWorkspaces)
            {
                <option value="@val.id">@val.name</option>
            }

        </InputSelect>


        <InputSelect ValueExpression="@(()=> Country)" 
                     Value="@Country" 
                     ValueChanged="@((string value) => OnValueChanged(value ))">
            <option value="">Select country...</option>
            <option value="USA">USA</option>
            <option value="Britain">Britain</option>
            <option value="Germany">Germany</option>
            <option value="Israel">Israel</option>
        </InputSelect>

    }
    else
    {
        @:Loading...
    }
    
    
    <TestComponent2 @bind-TestValue="TestValue"></TestComponent2>

</EditForm>

</div>

<div class="row p-2 align-items-center">
    <div class="col-2">Time Logged (Week)</div>
    <div class="col-1">@TimeLogged</div>
    <div class="col-5"><ProgressBar ProgressWidth="TimeloggedWidthPercent"/></div>
    

</div>


@Message

@code {

    public string TestValue { get; set; } = "Initial Parent";


    public string Message { get; set; } = "No Message";
    public string Country { get; set; } = "USA";

    private Task OnValueChanged(string value)
    {
        Message = "Value has been changed to " + value;
        // Assign the selected value to the Model 
        Country = value;

        return Task.CompletedTask;
    }

    private void OnWorkSpaceIDChanged(int wsid)
    {
        WorkSpaceID = wsid;

        //Update Progress Bar using the new workspace parameter



    }

}
